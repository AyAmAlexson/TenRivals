# Generated by Django 5.0.1 on 2024-05-08 08:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_tournament_stage', models.SmallIntegerField(null=True)),
                ('_date', models.DateField(null=True)),
                ('_court', models.CharField(max_length=50, null=True)),
                ('_status', models.CharField(choices=[('PD', 'Pending'), ('FI', 'Finished')], default='PD', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Pair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_gender', models.CharField(choices=[('M', "Men's Tournaments"), ('F', "Women's Tournaments"), ('X', 'Mixed Tournaments')], max_length=1, null=True)),
                ('_pair_since', models.DateField(auto_now_add=True)),
                ('_is_complete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PairMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_is_winner', models.BooleanField(null=True)),
                ('_is_withdrawn', models.BooleanField(default=False)),
                ('_set1_score', models.PositiveSmallIntegerField(default=0)),
                ('_set1_tie_score', models.PositiveSmallIntegerField(null=True)),
                ('_set1_won', models.BooleanField(null=True)),
                ('_set2_score', models.PositiveSmallIntegerField(null=True)),
                ('_set2_tie_score', models.PositiveSmallIntegerField(null=True)),
                ('_set2_won', models.BooleanField(null=True)),
                ('_set3_score', models.PositiveSmallIntegerField(null=True)),
                ('_set3_tie_score', models.PositiveSmallIntegerField(null=True)),
                ('_set3_won', models.BooleanField(null=True)),
                ('_set3_is_tiebreak', models.BooleanField(null=True)),
                ('_match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pair_matches', to='rivals.match')),
                ('_opponent', models.ForeignKey(on_delete=models.SET('0'), related_name='the_opponent_pair', to='rivals.pair')),
                ('_pair', models.ForeignKey(on_delete=models.SET('0'), related_name='the_pair', to='rivals.pair')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='_pairs',
            field=models.ManyToManyField(related_name='match_as_pair', through='rivals.PairMatch', to='rivals.pair'),
        ),
        migrations.CreateModel(
            name='PairSeasonStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_season', models.PositiveIntegerField(default=2024)),
                ('_pts', models.PositiveIntegerField(default=0)),
                ('_final_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_start_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_max_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_min_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_matches_played', models.PositiveIntegerField(default=0)),
                ('_matches_won', models.PositiveIntegerField(default=0)),
                ('_matches_lost', models.PositiveIntegerField(default=0)),
                ('_pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rivals.pair')),
            ],
        ),
        migrations.CreateModel(
            name='PairTotalStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_current_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_max_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_min_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_matches_played', models.PositiveIntegerField(default=0)),
                ('_matches_won', models.PositiveIntegerField(default=0)),
                ('_matches_lost', models.PositiveIntegerField(default=0)),
                ('_pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rivals.pair')),
            ],
        ),
        migrations.CreateModel(
            name='PairTournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_result', models.PositiveIntegerField(null=True)),
                ('_flow', models.CharField(default='', max_length=5)),
                ('_pair', models.ForeignKey(on_delete=models.SET('0'), to='rivals.pair')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_birthdate', models.DateField(null=True)),
                ('_gender', models.CharField(choices=[('M', "Men's Tournaments"), ('F', "Women's Tournaments")], max_length=1, null=True)),
                ('_geo', models.CharField(default='GE', max_length=50)),
                ('_city', models.CharField(default='TB', max_length=50)),
                ('_height', models.FloatField(null=True)),
                ('_weight', models.FloatField(null=True)),
                ('_tennis_exp_year', models.PositiveIntegerField(null=True)),
                ('_availability', models.TextField(null=True)),
                ('_player_since', models.DateField(auto_now_add=True)),
                ('_avatar', models.ImageField(null=True, upload_to='avatars/')),
                ('_level_current', models.FloatField(null=True)),
                ('_level_log', models.JSONField(default=dict)),
                ('_rating_pts', models.PositiveIntegerField(default=0)),
                ('_attributes', models.JSONField(default=dict)),
                ('_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='player', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='pair',
            name='_player1',
            field=models.ForeignKey(null=True, on_delete=models.SET('0'), related_name='pair_p1_set', to='rivals.player'),
        ),
        migrations.AddField(
            model_name='pair',
            name='_player2',
            field=models.ForeignKey(null=True, on_delete=models.SET('0'), related_name='pair_p2_set', to='rivals.player'),
        ),
        migrations.CreateModel(
            name='PlayerMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_is_winner', models.BooleanField(null=True)),
                ('_is_withdrawn', models.BooleanField(default=False)),
                ('_set1_score', models.PositiveSmallIntegerField(default=0)),
                ('_set1_tie_score', models.PositiveSmallIntegerField(null=True)),
                ('_set1_won', models.BooleanField(null=True)),
                ('_set2_score', models.PositiveSmallIntegerField(null=True)),
                ('_set2_tie_score', models.PositiveSmallIntegerField(null=True)),
                ('_set2_won', models.BooleanField(null=True)),
                ('_set3_score', models.PositiveSmallIntegerField(null=True)),
                ('_set3_tie_score', models.PositiveSmallIntegerField(null=True)),
                ('_set3_won', models.BooleanField(null=True)),
                ('_set3_is_tiebreak', models.BooleanField(null=True)),
                ('_match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_matches', to='rivals.match')),
                ('_opponent', models.ForeignKey(on_delete=models.SET('0'), related_name='the_opponent', to='rivals.player')),
                ('_player', models.ForeignKey(on_delete=models.SET('0'), related_name='the_player', to='rivals.player')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='_players',
            field=models.ManyToManyField(related_name='match_as_player', through='rivals.PlayerMatch', to='rivals.player'),
        ),
        migrations.CreateModel(
            name='PlayerSeasonStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_season', models.PositiveIntegerField(default=2024)),
                ('_pts', models.PositiveIntegerField(default=0)),
                ('_final_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_start_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_max_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_min_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_matches_played', models.PositiveIntegerField(default=0)),
                ('_matches_won', models.PositiveIntegerField(default=0)),
                ('_matches_lost', models.PositiveIntegerField(default=0)),
                ('_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rivals.player')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerTotalStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_current_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_max_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_min_rating_pts', models.PositiveIntegerField(default=1000)),
                ('_matches_played', models.PositiveIntegerField(default=0)),
                ('_matches_won', models.PositiveIntegerField(default=0)),
                ('_matches_lost', models.PositiveIntegerField(default=0)),
                ('_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rivals.player')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerTournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_result', models.PositiveIntegerField(null=True)),
                ('_flow', models.CharField(default='', max_length=8)),
                ('_player', models.ForeignKey(on_delete=models.SET('0'), to='rivals.player')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_title', models.CharField(max_length=150, null=True)),
                ('_type', models.CharField(choices=[('RM', 'Ranked Match'), ('GM', 'Group Match'), ('OS', 'Olympic System')], default='RM', max_length=2)),
                ('_category', models.CharField(choices=[('C0', 'Novice'), ('C1', 'Challenger'), ('C2', 'Tour'), ('C3', 'Maters'), ('PR', 'Professionals')], max_length=2)),
                ('_gender', models.CharField(choices=[('M', "Men's Tournaments"), ('F', "Women's Tournaments"), ('X', 'Mixed Tournaments')], max_length=1)),
                ('_format', models.CharField(choices=[('S', 'Singles'), ('D', 'Doubles')], max_length=2)),
                ('_geo', models.CharField(choices=[('MT', 'Malta'), ('IT', 'Italy'), ('RS', 'Serbia'), ('ME', 'Montenegro'), ('GE', 'Georgia')], default='GE', max_length=2)),
                ('_city', models.CharField(max_length=50, null=True)),
                ('_status', models.CharField(choices=[('CI', 'Check-In'), ('AC', 'In Action'), ('FI', 'Finished')], default='CI', max_length=2)),
                ('_start_date', models.DateField(null=True)),
                ('_current_stage', models.SmallIntegerField(default=0)),
                ('_current_stage_start_date', models.DateField(null=True)),
                ('_current_stage_end_date', models.DateField(null=True)),
                ('_players_num', models.PositiveSmallIntegerField()),
                ('_players_enrolled', models.PositiveSmallIntegerField(default=0)),
                ('_pairs', models.ManyToManyField(through='rivals.PairTournament', to='rivals.pair')),
                ('_players', models.ManyToManyField(through='rivals.PlayerTournament', to='rivals.player')),
            ],
        ),
        migrations.AddField(
            model_name='playertournament',
            name='_tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rivals.tournament'),
        ),
        migrations.AddField(
            model_name='pairtournament',
            name='_tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rivals.tournament'),
        ),
        migrations.AddField(
            model_name='match',
            name='_tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rivals.tournament'),
        ),
    ]
